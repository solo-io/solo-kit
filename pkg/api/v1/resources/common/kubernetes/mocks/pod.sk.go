// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/eitanya/go/src/github.com/solo-io/solo-kit/pkg/api/v1/resources/common/kubernetes/pod.sk.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pod "github.com/solo-io/solo-kit/api/external/kubernetes/pod"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// MockCloneablePod is a mock of CloneablePod interface
type MockCloneablePod struct {
	ctrl     *gomock.Controller
	recorder *MockCloneablePodMockRecorder
}

// MockCloneablePodMockRecorder is the mock recorder for MockCloneablePod
type MockCloneablePodMockRecorder struct {
	mock *MockCloneablePod
}

// NewMockCloneablePod creates a new mock instance
func NewMockCloneablePod(ctrl *gomock.Controller) *MockCloneablePod {
	mock := &MockCloneablePod{ctrl: ctrl}
	mock.recorder = &MockCloneablePodMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloneablePod) EXPECT() *MockCloneablePodMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method
func (m *MockCloneablePod) GetMetadata() core.Metadata {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(core.Metadata)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata
func (mr *MockCloneablePodMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockCloneablePod)(nil).GetMetadata))
}

// SetMetadata mocks base method
func (m *MockCloneablePod) SetMetadata(meta core.Metadata) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMetadata", meta)
}

// SetMetadata indicates an expected call of SetMetadata
func (mr *MockCloneablePodMockRecorder) SetMetadata(meta interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetadata", reflect.TypeOf((*MockCloneablePod)(nil).SetMetadata), meta)
}

// Equal mocks base method
func (m *MockCloneablePod) Equal(that interface{}) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Equal", that)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Equal indicates an expected call of Equal
func (mr *MockCloneablePodMockRecorder) Equal(that interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Equal", reflect.TypeOf((*MockCloneablePod)(nil).Equal), that)
}

// Clone mocks base method
func (m *MockCloneablePod) Clone() *pod.Pod {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Clone")
	ret0, _ := ret[0].(*pod.Pod)
	return ret0
}

// Clone indicates an expected call of Clone
func (mr *MockCloneablePodMockRecorder) Clone() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clone", reflect.TypeOf((*MockCloneablePod)(nil).Clone))
}
