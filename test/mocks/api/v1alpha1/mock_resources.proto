/*
Syntax Comments
Syntax Comments a
*/

syntax = "proto3";

/*
package Comments
package Comments a
*/
package testing.solo.io;
/*
go_package Comments
go_package Comments a
*/
option go_package = "github.com/solo-io/solo-kit/test/mocks/v1alpha1";

import "envoy/api/v2/discovery.proto";
import "google/api/annotations.proto";

/*
go_package Comments
go_package Comments a
*/
import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "extproto/ext.proto";
option (extproto.hash_all) = true;


import "github.com/solo-io/solo-kit/api/v1/metadata.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";
import "github.com/solo-io/solo-kit/api/v1/solo-kit.proto";


/*
below Comments
below Comments a
*/

/*
Mock resources for goofin off
*/
message MockResource {

    option (core.solo.io.resource).short_name = "mk";
    option (core.solo.io.resource).plural_name = "mocks";

    core.solo.io.Status status = 6 [(gogoproto.nullable) = false, (extproto.skip_hashing) = true];
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];

    string data = 1 [json_name="data.json", (gogoproto.jsontag) = "data.json"];
    string some_dumb_field = 100 [(extproto.skip_hashing) = true];

    oneof test_oneof_fields {
        string oneof_one = 3;
        bool oneof_two = 2;
    };
}

message FakeResource {

    option (core.solo.io.resource).short_name = "fk";
    option (core.solo.io.resource).plural_name = "fakes";

    uint32 count = 1;
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];
}
