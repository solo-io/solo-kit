syntax = "proto3";

package envoy.api.v2.auth;

import "github.com/solo-io/solo-kit/api/external/envoy/api/v2/auth/common.proto";
import "github.com/solo-io/solo-kit/api/external/envoy/api/v2/core/base.proto";
import "github.com/solo-io/solo-kit/api/external/envoy/api/v2/core/config_source.proto";

import "udpa/annotations/sensitive.proto";

option go_package = "github.com/solo-io/solo-kit/pkg/api/external/envoy/api/v2/auth";

// [#protodoc-title: Secrets configuration]

message GenericSecret {
  // Secret of generic type and is available to filters.
  core.DataSource secret = 1 [(udpa.annotations.sensitive) = true];
}

message SdsSecretConfig {
  // Name (FQDN, UUID, SPKI, SHA256, etc.) by which the secret can be uniquely referred to.
  // When both name and config are specified, then secret can be fetched and/or reloaded via
  // SDS. When only name is specified, then secret will be loaded from static resources.
  string name = 1;

  core.ConfigSource sds_config = 2;
}

// [#next-free-field: 6]
message Secret {
  // Name (FQDN, UUID, SPKI, SHA256, etc.) by which the secret can be uniquely referred to.
  string name = 1;

  oneof type {
    TlsCertificate tls_certificate = 2;

    TlsSessionTicketKeys session_ticket_keys = 3;

    CertificateValidationContext validation_context = 4;

    GenericSecret generic_secret = 5;
  }
}
