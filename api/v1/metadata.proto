syntax = "proto3";
package core.solo.io;
option go_package = "github.com/solo-io/solo-kit/pkg/api/v1/resources/core";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

/**
 * Metadata contains general properties of resources for purposes of versioning, annotating, and namespacing.
 */
message Metadata {
    /*
    Name of the resource.

    Names must be unique and follow the following syntax rules:

    One or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters.
    */
    string name = 2;

    // Namespace is used for the namespacing of resources.
    string namespace = 3;

    // Cluster indicates the cluster this resource belongs to
    // Cluster is only applicable in certain contexts, e.g. Kubernetes
    // An empty string here refers to the local cluster
    string cluster = 7;

    // An opaque value that represents the internal version of this object that can
    // be used by clients to determine when objects have changed.
    string resource_version = 4 [(gogoproto.moretags) = "testdiff:\"ignore\""];

    // Map of string keys and values that can be used to organize and categorize
    // (scope and select) objects. Some resources contain `selectors` which
    // can be linked with other resources by their labels
    map<string, string> labels = 5;

    // Annotations is an unstructured key value map stored with a resource that may be
    // set by external tools to store and retrieve arbitrary metadata.
    map<string, string> annotations = 6;
}
