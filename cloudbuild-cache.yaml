steps:
  - name: 'gcr.io/$PROJECT_ID/dep'
    args: ['ensure']
    env:
      - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
    id: 'dep'

  - name: 'gcr.io/$PROJECT_ID/go-make'
    entrypoint: 'bash'
    args: ['-c', 'tar -zvcf solo-kit-dep.tar.gz ./gopath/pkg/dep']
    env:
      - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
      - 'GOPATH=/workspace/gopath'
    id: 'create-dep-cache'

    # run all of the tests to fill the cache
  - name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
    env:
      - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
      - 'GOPATH=/workspace/gopath'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=solo-kit-test'
    dir: './gopath/src/github.com/solo-io/solo-kit'
    args: ['build', '-r', 'cli/pkg', 'pkg', 'test/e2e']
    waitFor: ['dep']
    id: 'test'

  - name: 'gcr.io/$PROJECT_ID/go-make'
    entrypoint: 'bash'
    args: ['-c', 'tar -zvcf solo-kit-gocache.tar.gz $(go env GOCACHE)']
    env:
      - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
      - 'GOPATH=/workspace/gopath'
    id: 'create-go-cache'

  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', 'solo-kit-dep.tar.gz', 'gs://solo-public-cache/solo-kit/solo-kit-dep.tar.gz']
    waitFor: ['create-dep-cache']

  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', 'solo-kit-gocache.tar.gz', 'gs://solo-public-cache/solo-kit/solo-kit-gocache.tar.gz']
    waitFor: ['create-go-cache']

timeout: 1500s
tags: ['solo-kit-cache']
options:
  machineType: 'N1_HIGHCPU_32'
